const g="cart",l=(r,t)=>t?`${r}_${t}`:r,i=()=>{try{const r=localStorage.getItem(g);if(r){const t=JSON.parse(r);if(u(t))return t;console.warn("Invalid cart structure found in localStorage. Resetting cart."),p()}}catch(r){console.error("Error reading cart from localStorage:",r)}return{items:[]}},s=r=>{try{r.items.forEach(t=>{t.id||(t.id=l(t.product.id,t.variationId))}),localStorage.setItem(g,JSON.stringify(r)),console.log("Cart saved to localStorage:",r),window.dispatchEvent(new Event("storage"))}catch(t){console.error("Error saving cart to localStorage:",t)}},y=(r,t=1,o,a)=>{const e=i(),c=l(r.id,o),d=e.items.find(n=>n.id===c);if(d)d.quantity+=t;else{const n={id:c,product:r,quantity:t,variationId:o,variationName:a};e.items.push(n)}s(e)},v=(r,t)=>{const o=i();if(t<=0){f(r);return}const a=o.items.find(e=>e.id===r);a&&(a.quantity=Math.min(t,99),s(o))},f=r=>{const t=i();t.items=t.items.filter(o=>o.id!==r),s(t)},p=()=>{s({items:[]}),window.dispatchEvent(new Event("storage"))},u=r=>r&&Array.isArray(r.items)&&r.items.every(t=>t&&typeof t.id=="string"&&typeof t.quantity=="number"&&t.product&&typeof t.product.id=="string"&&typeof t.product.name=="string"&&(t.variationId===void 0||typeof t.variationId=="string")&&(t.variationName===void 0||typeof t.variationName=="string"));export{y as a,p as c,i as g,f as r,v as u};
