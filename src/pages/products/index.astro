---
import { getCollection, getEntry } from 'astro:content';
import { removeFileExtension } from '../../utils/general';

import Layout from "../../layouts/Layout.astro";
import Button from "../../components/Button.astro";
import ParallaxSection from "../../components/ParallaxSection.astro";
import dnaImage from "../../assets/DNA image.jpg";

// Import Vue components
import ProductPage from "../../components/vue/ProductPage.vue";
import ProductSearch from "../../components/vue/ProductSearch.vue";
import type { CollectionEntry } from 'astro:content';

const productCollection = await getCollection('products', ({ data }) => {
    return data.draft === false;
});

const products = productCollection.map((product: CollectionEntry<'products'>) => {
    return {
        ...product.data,
        id: removeFileExtension(product.id)
    };
});

const categoryCollection = await getCollection('categories');
const categories = categoryCollection.map((category: CollectionEntry<'categories'>) => {
    return {
        ...category.data,
        id: removeFileExtension(category.id)
    };
});

const allProperties = products.flatMap((product) => product.properties || []);
const uniqueProperties = [...new Set(allProperties)];

// Get initial search query from URL for the search input component
const initialSearchQuery = Astro.url.searchParams.get('q') || '';
---

<Layout title="Products">
    <!-- Header section with search -->
    <section
        class="relative pt-16 pb-10 bg-gradient-to-br from-blue-200 to-neutral-50 overflow-x-hidden"
    >
        <div class="container mx-auto px-8">
            <div class="max-w-4xl mx-auto text-center">
                <h1 class="text-4xl md:text-5xl font-bold mb-6">
                    Our <span class="text-secondary-600">Medical</span> Equipment
                </h1>
                <p class="text-gray-700 text-xl mb-8">
                    Browse our comprehensive range of quality medical equipment
                    solutions
                </p>

                <!-- Pass initialSearchQuery to ProductSearch -->
                <ProductSearch client:load searchQuery={initialSearchQuery} />
            </div>
        </div>

        <!-- Decorative elements -->
        <div
            class="absolute top-0 right-0 w-24 h-24 bg-secondary-500 rounded-full opacity-20 -translate-y-1/3 translate-x-1/4"
        >
        </div>
    </section>

    <!-- Main content section -->
    <section class="py-12 px-8 bg-gray-50">
        <div class="container mx-auto">
            <!-- ProductPage reads initial state from URL itself -->
            <ProductPage
                client:load
                products={products}
                categories={categories}
                properties={uniqueProperties}
            />
        </div>
    </section>

    <!-- Call to action section -->
    <ParallaxSection
        imageUrl={dnaImage.src}
        overlayColor="bg-primary-700"
        overlayOpacity={0.7}
        class="py-16 px-8 text-white"
    >
        <div class="container mx-auto max-w-4xl text-center">
            <h2 class="text-3xl md:text-4xl font-bold mb-4">
                Can't find what you're looking for?
            </h2>
            <p class="text-xl opacity-90 mb-8 max-w-2xl mx-auto">
                We offer custom solutions tailored to your specific needs. Let's
                discuss your requirements.
            </p>
            <div class="flex flex-wrap justify-center gap-4">
                <Button href="/contact" variant="secondary" size="lg">
                    Request Consultation
                </Button>
                <Button href="/custom-solutions" variant="secondary" size="lg">
                    Custom Solutions
                </Button>
            </div>
        </div>
    </ParallaxSection>
</Layout>
